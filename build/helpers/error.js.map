{"version":3,"sources":["../../src/helpers/error.js"],"names":["ErrorConstructor","statusCode","message","Error","handleError","err","res","status","json"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;IAAqBA,gB;;;;;AACnB,4BAAYC,UAAZ,EAAwBC,OAAxB,EAAiC;AAAA;;AAAA;AAC/B;AACA,UAAKD,UAAL,GAAkBA,UAAlB;AACA,UAAKC,OAAL,GAAeA,OAAf;AAH+B;AAIhC;;;kDAL2CC,K;;;;AAQvC,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,GAAD,EAAMC,GAAN,EAAc;AAAA,MAC/BL,UAD+B,GACPI,GADO,CAC/BJ,UAD+B;AAAA,MACnBC,OADmB,GACPG,GADO,CACnBH,OADmB;AAEvC,SAAOI,GAAG,CAACC,MAAJ,CAAWN,UAAX,EAAuBO,IAAvB,CAA4B;AACjCD,IAAAA,MAAM,EAAE,OADyB;AAEjCN,IAAAA,UAAU,EAAVA,UAFiC;AAGjCC,IAAAA,OAAO,EAAPA;AAHiC,GAA5B,CAAP;AAKD,CAPM","sourcesContent":["export default class ErrorConstructor extends Error {\r\n  constructor(statusCode, message) {\r\n    super()\r\n    this.statusCode = statusCode\r\n    this.message = message\r\n  }\r\n}\r\n\r\nexport const handleError = (err, res) => {\r\n  const { statusCode, message } = err\r\n  return res.status(statusCode).json({\r\n    status: 'error',\r\n    statusCode,\r\n    message,\r\n  })\r\n}\r\n"],"file":"error.js"}